Index: WypozyczalniaAut/src/MainFiles/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package MainFiles;\r\n\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\nimport java.util.HashMap;\r\nimport java.util.Optional;\r\nimport java.util.Properties;\r\nimport java.util.Scanner;\r\n\r\npublic class Main {\r\n    private static final String CONFIG_FILE_PATH = \"config.properties\";\r\n\r\n    public static void main(String[] args) throws IOException {\r\n        SpisAut spisaut = stworzSpisAut();\r\n        SpisKlientow spisklientow = stworzSpisKlientow();\r\n\r\n        int a=1;\r\n\r\n        while(a==1) {\r\n\r\n\r\n            System.out.println(\"Witaj w wypozyczalni aut. Zdecyduj co chcesz zrobic\");\r\n            System.out.println(\"1.Wyswietl auta \\n2.Dodaj auta\");\r\n            System.out.println(\"3.Wyswietl klientow \\n4.Dodaj klientow\");\r\n            System.out.println(\"5.Wypozycz auta \\n6.Zwroc auta\");\r\n            System.out.println(\"7.Wyswietl dostepne auta\\n8.Usun auta\");\r\n            System.out.println(\"9.Wyswietl auta posiadane przez klienta\\n10. Wyjdz z programu\");\r\n\r\n            String wybor = dodajDane(\"wybor\");\r\n\r\n            switch (Integer.valueOf(wybor)) {\r\n\r\n                case 1:\r\n                    spisaut.wyswietlPojazdy();\r\n                    break;\r\n                case 2:\r\n                    dodajPojazd(spisaut);\r\n                    break;\r\n                case 3:\r\n                    spisklientow.wyswietlKlientow();\r\n                    break;\r\n                case 4:\r\n                    dodajKlienta(spisklientow);\r\n                    break;\r\n                case 5:\r\n                    wypozycz(spisklientow,spisaut);\r\n                    break;\r\n                case 6:\r\n                    String ida = dodajDane(\"id\");\r\n                    spisaut.zwroc(ida);\r\n                    break;\r\n                case 7:\r\n                    spisaut.wyswietldostepne();\r\n                    break;\r\n                case 8:\r\n                    usunPojazd(spisaut);\r\n                    break;\r\n                case 9:\r\n                    listaprzypisanychdoklienta(spisklientow,spisaut);\r\n                    break;\r\n                    case 10:\r\n                    a=0;\r\n                    break;\r\n                case 11:\r\n                    int x =spisaut.pokazIloscWypozyczonychAut(\"1\");\r\n                    System.out.println(x);\r\n                    break;\r\n                    default:\r\n                    System.out.println(\"Bledny wybor\");\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private static SpisAut stworzSpisAut() throws IOException {\r\n        Properties properties = new Properties();\r\n        try (var fis = new FileInputStream(\"config.properties\")) {\r\n            properties.load(fis);\r\n        }\r\n\r\n        MenagerDanych menagerDanych = new MenagerDanych(new File(properties.getProperty(\"plik.danych\")));\r\n\r\n        SpisAut spisaut = new SpisAut(menagerDanych);\r\n        return spisaut;\r\n    }\r\n    private static SpisKlientow stworzSpisKlientow() throws IOException {\r\n        Properties properties = new Properties();\r\n        try (var fis = new FileInputStream(\"klient-dane.json\")) {\r\n            properties.load(fis);\r\n        }\r\n        MenagerKlient menagerKlient = new MenagerKlient(new File(\"klient-dane.json\")); // Tworzenie obiektu MenagerKlient\r\n        SpisKlientow spisKlientow = new SpisKlientow(menagerKlient); // Tworzenie obiektu SpisKlientow z argumentem MenagerKlient\r\n        return spisKlientow;\r\n    }\r\n    private static void dodajPojazd(SpisAut spisaut) {\r\n        System.out.println(\"Dodajemy samochody do bazy danych\");\r\n\r\n        String id = dodajDane(\"Id\");\r\n        String marka = dodajDane(\"Marka\");\r\n        String model = dodajDane(\"Model\");\r\n        int rocznik = odczytajliczbe(\"Rocznik\");\r\n        Samochod samochod = new Samochod(id, marka, model, Integer.valueOf(rocznik));\r\n        spisaut.dodajSamochod(samochod);\r\n    }\r\n\r\n    private static void usunPojazd(SpisAut spisaut) {\r\n        System.out.println(\"Usuwamy pojazd podaj id\");\r\n        String id = dodajDane(\"Id\");\r\n        spisaut.usunPojazd(id);\r\n    }\r\n\r\n    private static void dodajKlienta(SpisKlientow spisklientow) {\r\n        System.out.println(\"Dodajemy osoby do bazy danych\");\r\n\r\n        String imie = dodajDane(\"imie\");\r\n        String nazwisko = dodajDane(\"nazwisko\");\r\n        String telefon = dodajDane(\"telefon\");\r\n        String id = String.valueOf(odczytajliczbe(\"id\"));\r\n        Klient klient = new Klient(imie, nazwisko, telefon, id);\r\n        spisklientow.dodajKlienta(klient);\r\n    }\r\n\r\n    public static void listaprzypisanychdoklienta(SpisKlientow spisklientow, SpisAut spisaut){\r\n        System.out.println(\"Podaj identyfikator klienta, któremu chcesz sprawdzic posiadane auta:\");\r\n        String idKlienta = dodajDane(\"id\");\r\n\r\n        if (spisklientow.sprawdzKlienta(idKlienta)) {\r\n            System.out.println(spisklientow.sprawdzKlienta(idKlienta));\r\n\r\n            spisaut.wyswietlautaklienta(idKlienta);\r\n\r\n        } else {\r\n            System.out.println(\"Nie znaleziono klienta o podanym identyfikatorze.\");\r\n        }\r\n    }\r\n\r\n    public static void wypozycz(SpisKlientow spisklientow, SpisAut spisaut) {\r\n        System.out.println(\"Podaj identyfikator klienta, któremu chcesz wypożyczyć auto:\");\r\n        String idKlienta = dodajDane(\"id\");\r\n\r\n        if (spisklientow.sprawdzKlienta(idKlienta)) {\r\n            System.out.println(spisklientow.sprawdzKlienta(idKlienta));\r\n\r\n            System.out.println(\"Wybierz auto do wypożyczenia:\");\r\n            spisaut.wyswietlPojazdy();\r\n            String idAuta = dodajDane(\"id auta\");\r\n\r\n            spisaut.wypozycz(idAuta, idKlienta);\r\n\r\n            // Zwiększanie ilości aut dla wypożyczającej osoby\r\n            Klient klient = spisklientow.getKlient(idKlienta);\r\n            System.out.println(klient);\r\n            if (klient != null) {\r\n                klient.inkrementacja();\r\n            }\r\n        } else {\r\n            System.out.println(\"Nie znaleziono klienta o podanym identyfikatorze.\");\r\n        }\r\n    }\r\n\r\n\r\n    public static String dodajDane(String nazwa) {\r\n        Scanner scanner = new Scanner(System.in);\r\n        System.out.println(\"Wpisz \" + nazwa);\r\n        String dane = scanner.nextLine();\r\n        System.out.println(\"Wpisales \" + nazwa + \" : \" + dane);\r\n        return dane;\r\n    }\r\n\r\n    public static int odczytajliczbe(String nazwa) {\r\n        Scanner scanner = new Scanner(System.in);\r\n        Optional<Integer> liczba = Optional.empty();\r\n        do {\r\n            System.out.println(\"Wpisz \" + nazwa + \": \");\r\n            try {\r\n                liczba = Optional.of(Integer.valueOf(scanner.nextLine()));\r\n            } catch (NumberFormatException numberFormatException) {\r\n                System.out.println(\"wpisałeś błędne dane, wpisz jeszcze raz.\");\r\n            }\r\n        }\r\n        while (liczba.isEmpty());\r\n        return liczba.get();\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/WypozyczalniaAut/src/MainFiles/Main.java b/WypozyczalniaAut/src/MainFiles/Main.java
--- a/WypozyczalniaAut/src/MainFiles/Main.java	(revision 3e3a3cfca7d63c034a23802d8db49ed9b42b7c92)
+++ b/WypozyczalniaAut/src/MainFiles/Main.java	(date 1686681943843)
@@ -2,9 +2,7 @@
 
 import java.io.File;
 import java.io.FileInputStream;
-import java.io.FileNotFoundException;
 import java.io.IOException;
-import java.util.HashMap;
 import java.util.Optional;
 import java.util.Properties;
 import java.util.Scanner;
@@ -16,64 +14,86 @@
         SpisAut spisaut = stworzSpisAut();
         SpisKlientow spisklientow = stworzSpisKlientow();
 
-        int a=1;
+        int a = 1;
 
-        while(a==1) {
+        while (a == 1) {
+            clearScreen();
 
-
-            System.out.println("Witaj w wypozyczalni aut. Zdecyduj co chcesz zrobic");
-            System.out.println("1.Wyswietl auta \n2.Dodaj auta");
-            System.out.println("3.Wyswietl klientow \n4.Dodaj klientow");
-            System.out.println("5.Wypozycz auta \n6.Zwroc auta");
-            System.out.println("7.Wyswietl dostepne auta\n8.Usun auta");
-            System.out.println("9.Wyswietl auta posiadane przez klienta\n10. Wyjdz z programu");
+            System.out.println("========================");
+            System.out.println("   Wypożyczalnia aut");
+            System.out.println("========================");
+            System.out.println("1. Wyświetl auta");
+            System.out.println("2. Dodaj auta");
+            System.out.println("3. Wyświetl klientów");
+            System.out.println("4. Dodaj klientów");
+            System.out.println("5. Wypożycz auta");
+            System.out.println("6. Zwróć auta");
+            System.out.println("7. Wyświetl dostępne auta");
+            System.out.println("8. Usuń auta");
+            System.out.println("9. Wyświetl auta posiadane przez klienta");
+            System.out.println("10. Wyjdź z programu");
 
             String wybor = dodajDane("wybor");
 
             switch (Integer.valueOf(wybor)) {
 
                 case 1:
+                    clearScreen();
                     spisaut.wyswietlPojazdy();
+                    pressEnterToContinue();
                     break;
                 case 2:
+                    clearScreen();
                     dodajPojazd(spisaut);
+                    pressEnterToContinue();
                     break;
                 case 3:
+                    clearScreen();
                     spisklientow.wyswietlKlientow();
+                    pressEnterToContinue();
                     break;
                 case 4:
+                    clearScreen();
                     dodajKlienta(spisklientow);
+                    pressEnterToContinue();
                     break;
                 case 5:
-                    wypozycz(spisklientow,spisaut);
+                    clearScreen();
+                    wypozycz(spisklientow, spisaut);
+                    pressEnterToContinue();
                     break;
                 case 6:
+                    clearScreen();
                     String ida = dodajDane("id");
                     spisaut.zwroc(ida);
+                    pressEnterToContinue();
                     break;
                 case 7:
+                    clearScreen();
                     spisaut.wyswietldostepne();
+                    pressEnterToContinue();
                     break;
                 case 8:
+                    clearScreen();
                     usunPojazd(spisaut);
+                    pressEnterToContinue();
                     break;
                 case 9:
-                    listaprzypisanychdoklienta(spisklientow,spisaut);
+                    clearScreen();
+                    listaprzypisanychdoklienta(spisklientow, spisaut);
+                    pressEnterToContinue();
                     break;
-                    case 10:
-                    a=0;
-                    break;
-                case 11:
-                    int x =spisaut.pokazIloscWypozyczonychAut("1");
-                    System.out.println(x);
+                case 10:
+                    a = 0;
                     break;
-                    default:
-                    System.out.println("Bledny wybor");
-
+                default:
+                    clearScreen();
+                    System.out.println("Błędny wybór");
+                    pressEnterToContinue();
             }
         }
+    }
 
-    }
 
     private static SpisAut stworzSpisAut() throws IOException {
         Properties properties = new Properties();
@@ -86,15 +106,17 @@
         SpisAut spisaut = new SpisAut(menagerDanych);
         return spisaut;
     }
+
     private static SpisKlientow stworzSpisKlientow() throws IOException {
         Properties properties = new Properties();
         try (var fis = new FileInputStream("klient-dane.json")) {
             properties.load(fis);
         }
-        MenagerKlient menagerKlient = new MenagerKlient(new File("klient-dane.json")); // Tworzenie obiektu MenagerKlient
-        SpisKlientow spisKlientow = new SpisKlientow(menagerKlient); // Tworzenie obiektu SpisKlientow z argumentem MenagerKlient
+        MenagerKlient menagerKlient = new MenagerKlient(new File("klient-dane.json"));
+        SpisKlientow spisKlientow = new SpisKlientow(menagerKlient);
         return spisKlientow;
     }
+
     private static void dodajPojazd(SpisAut spisaut) {
         System.out.println("Dodajemy samochody do bazy danych");
 
@@ -123,8 +145,8 @@
         spisklientow.dodajKlienta(klient);
     }
 
-    public static void listaprzypisanychdoklienta(SpisKlientow spisklientow, SpisAut spisaut){
-        System.out.println("Podaj identyfikator klienta, któremu chcesz sprawdzic posiadane auta:");
+    public static void listaprzypisanychdoklienta(SpisKlientow spisklientow, SpisAut spisaut) {
+        System.out.println("Podaj identyfikator klienta, któremu chcesz sprawdzić posiadane auta:");
         String idKlienta = dodajDane("id");
 
         if (spisklientow.sprawdzKlienta(idKlienta)) {
@@ -150,7 +172,6 @@
 
             spisaut.wypozycz(idAuta, idKlienta);
 
-            // Zwiększanie ilości aut dla wypożyczającej osoby
             Klient klient = spisklientow.getKlient(idKlienta);
             System.out.println(klient);
             if (klient != null) {
@@ -161,6 +182,27 @@
         }
     }
 
+    private static void clearScreen() {
+        try {
+            if (System.getProperty("os.name").contains("Windows")) {
+                new ProcessBuilder("cmd", "/c", "cls").inheritIO().start().waitFor();
+            } else {
+                System.out.print("\033[H\033[2J");
+                System.out.flush();
+            }
+        } catch (Exception e) {
+            // Handle errors
+        }
+    }
+
+    private static void pressEnterToContinue() {
+        System.out.print("Naciśnij Enter, aby kontynuować...");
+        try {
+            System.in.read();
+        } catch (Exception e) {
+            // Handle errors
+        }
+    }
 
     public static String dodajDane(String nazwa) {
         Scanner scanner = new Scanner(System.in);
@@ -180,10 +222,7 @@
             } catch (NumberFormatException numberFormatException) {
                 System.out.println("wpisałeś błędne dane, wpisz jeszcze raz.");
             }
-        }
-        while (liczba.isEmpty());
+        } while (liczba.isEmpty());
         return liczba.get();
     }
-
-
 }
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"a3e094a5-c8d9-4670-ab87-fba739b671d3\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/WypozyczalniaAut/src/MainFiles/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/WypozyczalniaAut/src/MainFiles/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/WypozyczalniaAut/src/MainFiles/SpisAut.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/WypozyczalniaAut/src/MainFiles/SpisAut.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/ProjektJ/MainFiles/Main.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/ProjektJ/MainFiles/Main.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/ProjektJ/MainFiles/SpisAut.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/ProjektJ/MainFiles/SpisAut.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/wypozyczalnia-dane.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/wypozyczalnia-dane.json\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2Ovs5OiU8B3Ghl72GmODX78GFEO\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/brykm/OneDrive/Pulpit/javaprojekt/ProjektJ&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.sourceCode.Java&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"ALTERNATIVE_JRE_PATH\" value=\"19\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"true\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"MainFiles.Main\" />\r\n      <module name=\"ProjektJ\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"MainFiles.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"a3e094a5-c8d9-4670-ab87-fba739b671d3\" name=\"Changes\" comment=\"\" />\r\n      <created>1682452206432</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1682452206432</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.History.Properties\">\r\n    <option name=\"COLUMN_ID_ORDER\">\r\n      <list>\r\n        <option value=\"Default.Root\" />\r\n        <option value=\"Default.Author\" />\r\n        <option value=\"Default.Date\" />\r\n        <option value=\"Default.Subject\" />\r\n        <option value=\"Space.CommitStatus\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 3e3a3cfca7d63c034a23802d8db49ed9b42b7c92)
+++ b/.idea/workspace.xml	(date 1686681736592)
@@ -7,10 +7,7 @@
     <list default="true" id="a3e094a5-c8d9-4670-ab87-fba739b671d3" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/WypozyczalniaAut/src/MainFiles/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/WypozyczalniaAut/src/MainFiles/Main.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/WypozyczalniaAut/src/MainFiles/SpisAut.java" beforeDir="false" afterPath="$PROJECT_DIR$/WypozyczalniaAut/src/MainFiles/SpisAut.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/out/production/ProjektJ/MainFiles/Main.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/ProjektJ/MainFiles/Main.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/ProjektJ/MainFiles/SpisAut.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/ProjektJ/MainFiles/SpisAut.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/wypozyczalnia-dane.json" beforeDir="false" afterPath="$PROJECT_DIR$/wypozyczalnia-dane.json" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
